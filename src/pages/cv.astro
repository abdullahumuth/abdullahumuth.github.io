---
import Layout from '@/layouts/Layout.astro'
import { research, extracurricular, workshops, education, skills, publications, scholarships, work } from '../data/cv'
import CvTimeline from '@/components/ui/CvTimeline.astro'

import type { Experience, Education, Publication, Workshop, Scholarship } from '../types/cv'
import List from '@/components/ui/List.astro'
import PublicationsList from '@/components/ui/PublicationsList.astro'

let orderedResearch: Experience[] = []
let orderedWork: Experience[] = []
let orderedExtracurricular: Experience[] = []
let orderedWorkshops: Workshop[] = []
let orderedEducations: Education[] = []
let orderedPublications: Publication[] = []
let orderedScholarships: Scholarship[] = []

const orderElement = <T extends { time: string }>(a: T, b: T) => {
  const presentValues = ['present', 'now', 'current', 'today']
  const endA = (a['time'] as string)?.split(' - ')[1]?.toLowerCase()
  const endB = (b['time'] as string)?.split(' - ')[1]?.toLowerCase()
  if (presentValues.includes(endA)) return -1
  if (presentValues.includes(endB)) return 1
  const dateA = new Date((a['time'] as string)?.split(' - ')[1])
  const dateB = new Date((b['time'] as string)?.split(' - ')[1])
  return dateB.getTime() - dateA.getTime()
}

if (research.length > 0) orderedResearch = research.sort(orderElement)
if (work.length > 0) orderedWork = work.sort(orderElement)
if (extracurricular.length > 0) orderedExtracurricular = extracurricular.sort(orderElement)
if (workshops.length > 0) orderedWorkshops = workshops.sort(orderElement)
if (education.length > 0) orderedEducations = education.sort(orderElement)
if (publications.length > 0) orderedPublications = publications.sort(orderElement)

if (scholarships.length > 0) {
  orderedScholarships = scholarships.sort((a, b) => {
    const presentValues = ['present', 'now', 'current', 'today']
    if (presentValues.includes(a.period?.split('–')[1]?.toLowerCase().trim())) return -1
    const yearA = parseInt(a.period?.split('–')[1]?.trim() || '0')
    const yearB = parseInt(b.period?.split('–')[1]?.trim() || '0')
    return yearB - yearA
  })
}
---

<Layout>
	{
		orderedEducations.length > 0 && (
			<section class='mb-12'>
				<h2 class='text-2xl font-bold mb-6 border-b pb-2'>
					Education
				</h2>
				<CvTimeline elements={orderedEducations} colored={true} />
			</section>
		)
	}

	{
		orderedResearch.length > 0 && (
			<section class='mb-12'>
				<h2 class='text-2xl font-bold mb-6 border-b pb-2'>
					Research Experience
				</h2>
				<CvTimeline elements={orderedResearch} colored={true} />
			</section>
		)
	}

	{
		orderedWork.length > 0 && (
			<section class='mb-12'>
				<h2 class='text-2xl font-bold mb-6 border-b pb-2'>
					Work Experience
				</h2>
				<CvTimeline elements={orderedWork} colored={true} />
			</section>
		)
	}

	{
		orderedWorkshops.length > 0 && (
			<section class='mb-12'>
				<h2 class='text-2xl font-bold mb-6 border-b pb-2'>
					Academic Programs & Workshops
				</h2>
				<CvTimeline elements={orderedWorkshops} colored={true} />
			</section>
		)
	}

	{
		orderedExtracurricular.length > 0 && (
			<section class='mb-12'>
				<h2 class='text-2xl font-bold mb-6 border-b pb-2'>
					Leadership & Teaching Experience
				</h2>
				<CvTimeline elements={orderedExtracurricular} colored={true} />
			</section>
		)
	}

	{
		orderedPublications.length > 0 && (
			<section class='mb-12'>
				<h2 class='text-2xl font-bold mb-6 border-b pb-2'>
					Publications
				</h2>
				<PublicationsList elements={orderedPublications}/>
			</section>
		)
	}

	{
		orderedScholarships.length > 0 && (
			<section class='mb-12'>
				<h2 class='text-2xl font-bold mb-6 border-b pb-2'>
					Scholarships & Grants
				</h2>
				<div class='space-y-4'>
					{orderedScholarships.map(scholarship => (
						<div class='border-l-4 border-primary pl-4'>
							<h3 class='font-semibold text-lg'>{scholarship.name}</h3>
							<p class='text-sm text-muted-foreground'>{scholarship.amount} • {scholarship.period}</p>
							{scholarship.description && <p class='mt-1'>{scholarship.description}</p>}
						</div>
					))}
				</div>
			</section>
		)
	}

	{
		skills.length > 0 && (
			<section class='mb-12'>
				<List listTitle='Technical Skills' listItems={skills}/>
			</section>
		)
	}
</Layout>
